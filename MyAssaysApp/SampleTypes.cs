///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyAssaysApp
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SampleTypes recording.
    /// </summary>
    [TestModule("a9a16d6d-18c9-4b03-981f-b7d53a8149e4", ModuleType.Recording, 1)]
    public partial class SampleTypes : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyAssaysAppRepository repository.
        /// </summary>
        public static MyAssaysAppRepository repo = MyAssaysAppRepository.Instance;

        static SampleTypes instance = new SampleTypes();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SampleTypes()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SampleTypes Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Application", "Run application 'C:\\Program Files (x86)\\MyAssays\\MyAssays Desktop\\MyAssays.Desktop.Explorer.exe' with arguments '' in normal mode.", new RecordItemIndex(0));
            Host.Local.RunApplication("C:\\Program Files (x86)\\MyAssays\\MyAssays Desktop\\MyAssays.Desktop.Explorer.exe", "", "C:\\Program Files (x86)\\MyAssays\\MyAssays Desktop", false);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Select the sample types used in your assay:') on item 'NewProtocolWizard1.SelectTheSampleTypesUsedInYourAss'.", repo.NewProtocolWizard1.SelectTheSampleTypesUsedInYourAssInfo, new RecordItemIndex(1));
            Validate.Attribute(repo.NewProtocolWizard1.SelectTheSampleTypesUsedInYourAssInfo, "Text", "Select the sample types used in your assay:");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'NewProtocolWizard1.ScrollViewer.CheckBox'.", repo.NewProtocolWizard1.ScrollViewer.CheckBoxInfo, new RecordItemIndex(2));
            Validate.Attribute(repo.NewProtocolWizard1.ScrollViewer.CheckBoxInfo, "Checked", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'NewProtocolWizard1.ScrollViewer.CheckBox1'.", repo.NewProtocolWizard1.ScrollViewer.CheckBox1Info, new RecordItemIndex(3));
            Validate.Attribute(repo.NewProtocolWizard1.ScrollViewer.CheckBox1Info, "Checked", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'NewProtocolWizard1.ScrollViewer.CheckBox2'.", repo.NewProtocolWizard1.ScrollViewer.CheckBox2Info, new RecordItemIndex(4));
            Validate.Attribute(repo.NewProtocolWizard1.ScrollViewer.CheckBox2Info, "Checked", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'NewProtocolWizard1.ScrollViewer.CheckBox3'.", repo.NewProtocolWizard1.ScrollViewer.CheckBox3Info, new RecordItemIndex(5));
            Validate.Attribute(repo.NewProtocolWizard1.ScrollViewer.CheckBox3Info, "Checked", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'NewProtocolWizard1.ScrollViewer.CheckBox4'.", repo.NewProtocolWizard1.ScrollViewer.CheckBox4Info, new RecordItemIndex(6));
            Validate.Attribute(repo.NewProtocolWizard1.ScrollViewer.CheckBox4Info, "Checked", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'NewProtocolWizard1.ScrollViewer.CheckBox5'.", repo.NewProtocolWizard1.ScrollViewer.CheckBox5Info, new RecordItemIndex(7));
            Validate.Attribute(repo.NewProtocolWizard1.ScrollViewer.CheckBox5Info, "Checked", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='False') on item 'NewProtocolWizard.SomeContainer.SomeCheckBox1'.", repo.NewProtocolWizard.SomeContainer.SomeCheckBox1Info, new RecordItemIndex(8));
            Validate.Attribute(repo.NewProtocolWizard.SomeContainer.SomeCheckBox1Info, "Checked", "False");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Back') on item 'NewProtocolWizard.SomeContainer.Back'.", repo.NewProtocolWizard.SomeContainer.BackInfo, new RecordItemIndex(9));
            Validate.Attribute(repo.NewProtocolWizard.SomeContainer.BackInfo, "Text", "Back");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Manage Types...') on item 'NewProtocolWizard.SomeContainer.AdvancedViewButton'.", repo.NewProtocolWizard.SomeContainer.AdvancedViewButtonInfo, new RecordItemIndex(10));
            Validate.Attribute(repo.NewProtocolWizard.SomeContainer.AdvancedViewButtonInfo, "Text", "Manage Types...");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Next') on item 'NewProtocolWizard.SomeContainer.Next'.", repo.NewProtocolWizard.SomeContainer.NextInfo, new RecordItemIndex(11));
            Validate.Attribute(repo.NewProtocolWizard.SomeContainer.NextInfo, "Text", "Next");
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.NewProtocolWizard.SomeContainer.Self, false, new RecordItemIndex(12));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Next') on item 'NewProtocolWizard.SomeContainer.Next1'.", repo.NewProtocolWizard.SomeContainer.Next1Info, new RecordItemIndex(13));
            Validate.Attribute(repo.NewProtocolWizard.SomeContainer.Next1Info, "Text", "Next");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewProtocolWizard.SomeContainer.Next1' at Center.", repo.NewProtocolWizard.SomeContainer.Next1Info, new RecordItemIndex(14));
            repo.NewProtocolWizard.SomeContainer.Next1.Click();
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
