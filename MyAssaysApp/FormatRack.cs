///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyAssaysApp
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The FormatRack recording.
    /// </summary>
    [TestModule("00dd5a80-6a5b-4f51-b655-cae7858b8f26", ModuleType.Recording, 1)]
    public partial class FormatRack : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyAssaysAppRepository repository.
        /// </summary>
        public static MyAssaysAppRepository repo = MyAssaysAppRepository.Instance;

        static FormatRack instance = new FormatRack();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public FormatRack()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static FormatRack Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Application", "Run application 'C:\\Program Files (x86)\\MyAssays\\MyAssays Desktop\\MyAssays.Desktop.Explorer.exe' with arguments '' in normal mode.", new RecordItemIndex(0));
            Host.Local.RunApplication("C:\\Program Files (x86)\\MyAssays\\MyAssays Desktop\\MyAssays.Desktop.Explorer.exe", "", "C:\\Program Files (x86)\\MyAssays\\MyAssays Desktop", false);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='My data is measured in the format:') on item 'NewProtocolWizard.SomeContainer.MyDataIsMeasuredInTheFormat'.", repo.NewProtocolWizard.SomeContainer.MyDataIsMeasuredInTheFormatInfo, new RecordItemIndex(1));
            Validate.Attribute(repo.NewProtocolWizard.SomeContainer.MyDataIsMeasuredInTheFormatInfo, "Text", "My data is measured in the format:");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewProtocolWizard.SomeContainer.OptionMark2' at Center.", repo.NewProtocolWizard.SomeContainer.OptionMark2Info, new RecordItemIndex(2));
            repo.NewProtocolWizard.SomeContainer.OptionMark2.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'NewProtocolWizard.SomeContainer.RackRadioButton'.", repo.NewProtocolWizard.SomeContainer.RackRadioButtonInfo, new RecordItemIndex(3));
            Validate.Exists(repo.NewProtocolWizard.SomeContainer.RackRadioButtonInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Number of samples per rack:') on item 'NewProtocolWizard.SomeContainer.NumberOfSamplesPerRack'.", repo.NewProtocolWizard.SomeContainer.NumberOfSamplesPerRackInfo, new RecordItemIndex(4));
            Validate.Attribute(repo.NewProtocolWizard.SomeContainer.NumberOfSamplesPerRackInfo, "Text", "Number of samples per rack:");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='10') on item 'NewProtocolWizard.SomeContainer.Text10'.", repo.NewProtocolWizard.SomeContainer.Text10Info, new RecordItemIndex(5));
            Validate.Attribute(repo.NewProtocolWizard.SomeContainer.Text10Info, "Text", "10");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'NewProtocolWizard.SomeContainer.SomePicture'.", repo.NewProtocolWizard.SomeContainer.SomePictureInfo, new RecordItemIndex(6));
            Validate.Exists(repo.NewProtocolWizard.SomeContainer.SomePictureInfo);
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.NewProtocolWizard.SomeContainer.Self, false, new RecordItemIndex(7));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Back') on item 'NewProtocolWizard.SomeContainer.Back'.", repo.NewProtocolWizard.SomeContainer.BackInfo, new RecordItemIndex(8));
            Validate.Attribute(repo.NewProtocolWizard.SomeContainer.BackInfo, "Text", "Back");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Next') on item 'NewProtocolWizard.SomeContainer.Next'.", repo.NewProtocolWizard.SomeContainer.NextInfo, new RecordItemIndex(9));
            Validate.Attribute(repo.NewProtocolWizard.SomeContainer.NextInfo, "Text", "Next");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewProtocolWizard.SomeContainer.Next' at Center.", repo.NewProtocolWizard.SomeContainer.NextInfo, new RecordItemIndex(10));
            repo.NewProtocolWizard.SomeContainer.Next.Click();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
